#!/usr/bin/env python3

import itertools as it
import requests
import sys
from tabulate import tabulate
import time

# Inputs
helios = sys.argv[1]
regions = sys.argv[2]
patches = sys.argv[3]
rawLimit = None if len(sys.argv) < 4 else int(sys.argv[4])

# Output Modifiers
limit = abs(rawLimit)
reverse = rawLimit > 0

# Endpoint Info
static_endpoint = helios + '/static/entry'
champions_endpoint = helios + '/champions'
champions_params = { 'regions': regions, 'patches': patches }

# Request Helios

start = time.time()
print('Requesting {} for static info...'.format(static_endpoint))
static = requests.get(static_endpoint).json()
print('Static request took {} seconds'.format(time.time() - start))

start = time.time()
print('Requesting {} for champions statistics with params {}...'.format(champions_endpoint, champions_params))
statistics = requests.get(champions_endpoint, params = champions_params).json()
print('Champion Statistics request took {} seconds\n'.format(time.time() - start))

# Map of champion id to plays Statistic
plays = statistics['scalars']['plays'].items()

# Print Total number of Plays
print("Total # of plays: {}\n".format(sum((int(value["mean"]) for key, value in plays))))

# Print Table
l = sorted([[static["champions"].get(key)["name"], value["mean"]] for key, value in plays], key=lambda a: a[1], reverse=reverse)
print(tabulate(l[:abs(limit)], headers=["champion name", "# of plays"]))
